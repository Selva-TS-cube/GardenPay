"use strict";var g=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)};var u=(e,t,r)=>(g(e,t,"read from private field"),r?r.call(e):t.get(e)),l=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},h=(e,t,r,s)=>(g(e,t,"write to private field"),s?s.call(e,r):t.set(e,r),r);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const d=e=>new Promise(t=>setTimeout(t,e));class x{constructor(t,r){this.maxRetries=Math.max(t,0),this.delay=r}async retry(t){let r=0,s;for(;r<this.maxRetries+1;)try{return await t()}catch(n){r++,s=n,await d(this.delay*r)}throw s}}const f=e=>{try{return JSON.parse(e)}catch{return e}};class k{static async _postWithFallback(t,r){let s="";for(const n of t)try{const a=await fetch(n,{method:"POST",...r});if(a.status>=500){s=await(a.text()||a.json());continue}return await this.parse(a)}catch(a){s=p(a);continue}throw new Error(s||"All APIs failed")}static async postWithFallback(t,r){return await y(r).retry(()=>this._postWithFallback(t,r))}static async _getWithFallback(t,r){let s="";for(const n of t)try{const a=await fetch(n,r);if(a.status>=500){s=await(a.text()||a.json());continue}return await this.parse(a)}catch(a){s=p(a);continue}throw new Error(s||"All APIs failed")}static async getWithFallback(t,r){return await y(r).retry(()=>this._getWithFallback(t,r))}static async _get(t,r){return await this.parse(await fetch(t,r))}static async get(t,r){return await y(r).retry(()=>this._get(t,r))}static async _post(t,r){return await this.parse(await fetch(t,{method:"POST",...r}))}static async post(t,r){return await y(r).retry(()=>this._post(t,r))}static async parse(t){const r=await t.text();if(t.status>=200&&t.status<300)return f(r);throw new Error(r)}}function p(e){return(e==null?void 0:e.message)||(e==null?void 0:e.toString())||"unknown error"}const y=e=>new x((e==null?void 0:e.retryCount)??2,(e==null?void 0:e.retryDelay)??1e3);class b{constructor(t){this.url=t}async sendRequest(t){try{return await k.post(this.url,{body:JSON.stringify(t)})}catch(r){return f(r.message)}}}const P=(e,t)=>{if(!e)throw new Error(t);return e},S=e=>e.startsWith("0x")?e:`0x${e}`,v=e=>e.startsWith("0x")?e.slice(2):e;var c,i,o;class w{constructor(t,r,s=void 0){l(this,c,void 0);l(this,i,void 0);l(this,o,void 0);h(this,c,t),h(this,o,s),h(this,i,r)}get ok(){return u(this,c)}get error(){return u(this,o)}get val(){return u(this,i)}}c=new WeakMap,i=new WeakMap,o=new WeakMap;const R=e=>new w(!0,e),E=void 0,W=(e,...t)=>{if(typeof e=="string"&&t&&t.length>0){let r=[e,...t].map(s=>{if(s){if(s instanceof Error)return s.message;if(typeof s=="string")return s;if(s!=null&&s.toString)return s.toString()}});return new w(!1,null,r.filter(s=>s!==void 0).join(" "))}return new w(!1,null,e)};async function F(e){try{const t=await e();return t.ok||t.error||t.val?Promise.resolve(t):R(t)}catch(t){return W(t)}}exports.Err=W;exports.Fetcher=k;exports.JsonRpc=b;exports.Ok=R;exports.Result=w;exports.Retry=x;exports.Void=E;exports.ensureVal=P;exports.executeWithTryCatch=F;exports.safeParseJson=f;exports.sleep=d;exports.trim0x=v;exports.with0x=S;
